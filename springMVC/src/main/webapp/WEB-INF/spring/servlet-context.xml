<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xmlns:context="http://www.springframework.org/schema/context"

       xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans.xsd

       http://www.springframework.org/schema/mvc
       https://www.springframework.org/schema/mvc/spring-mvc.xsd

       http://www.springframework.org/schema/context
       https://www.springframework.org/schema/context/spring-context.xsd">

    <!-- mvc 관련 어노테이션 사용을 가능하게 만들어주는 태그 -->
    <!-- 어노테이션 확인 -> 실행-->
    <mvc:annotation-driven/>

    <!-- 정적자원 경로 설정 : html(정적으로 안 사용), css, js, image [구지 컨트롤러 통해서 가져올 필요가 없음 / 그래서 이미지 요청시 그냥 xml 선에서 처리하도록] -->
    <!-- 이 정적자원 경로 설정은 해당 자원의 full 경로를 입력하면 해당하는 자원을 불러오는 설정으로 -->
    <!-- 경로 설정을 줄이는 것이 아닌 frontcontroller에서 처리를 복잡하게 안 하려고 설정하는 것이다. -->
    <!-- 해당 경로에 있는지만 확인하는 역할 -->

<!--    <mvc:resources mapping="/resources/**" location="/resources/"></mvc:resources>-->
<!--    <mvc:resources mapping="/css/**" location="/css/"></mvc:resources>-->
<!--    <mvc:resources mapping="/some/**" location="/some/"></mvc:resources>-->

    <!-- 서블릿이 읽을 정적 파일의 위치 -->
    <mvc:resources mapping="/uploadfile/**" location="/uploadfile/"/>

    <!-- view 설정 (view resolver)-->
    <bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">

        <!-- name == 속성 value == view 경로 설정 -->
        <property name="prefix" value="/WEB-INF/views/"></property>
        <property name="suffix" value=".jsp"></property>
    </bean>


<!--    만약 불러오고 싶은 파일이 있을 경우-->
<!--    prefix와 suffix를 지운 형태로 불러온다-->
<!--    /WEB-INF/view/및 .jsp 를 지운다는 예기-->

<!--    만약 경로가 /WEB-INF/view/member/loginform.jsp 일 경우-->
<!--    prefix를 제거 -> member/loginform.jsp-->
<!--    suffix를 제거 -> member/loginform-->
<!--    [member/loginform] 이상태로 사용한다-->


    <!-- 파일 업로드를 위해서는 multipartResolver 등록이 필수이다. -->
    <bean id="multipartResolver"
          class="org.springframework.web.multipart.commons.CommonsMultipartResolver"
    >
        <!-- 받을 파일의 문자열 설정 default[ISO-8859-1] -->
        <property name="defaultEncoding" value="UTF-8"/>


    </bean>


    <!-- 인터셉터 설정 -->
    <mvc:interceptors>
        <mvc:interceptor>

            <!-- mypage아래로 오는 모든 폴더를 들어갈 때 작동 -->
            <mvc:mapping path="/mypage/**"/>

            <!-- mypage안 help안 파일들은 인터셉터 처리를 안하겠다 설정 -->
            <mvc:exclude-mapping path="/mypage/help/**"/>
            <bean class="com.hi.app.intercepter.AuthCheckIntercepter"/>
        </mvc:interceptor>
    </mvc:interceptors>

    <!-- bean 자동 등록 설정 : @Controller, @Service, @Repository -->
    <context:component-scan base-package="com.hi.app"></context:component-scan>

    <bean id="conversionService"
          class="org.springframework.format.support.FormattingConversionServiceFactoryBean">

        <property name="formatters">
            <set>
                <bean class="com.hi.app.formatter.localdateFormatter"/>
            </set>
        </property>
    </bean>

    <!-- formatter 등록 설정-->
    <mvc:annotation-driven conversion-service="conversionService"/>

</beans>